//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AssetBundleManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AssetBundleManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("LoadLuaFile", LoadLuaFile);
		L.RegFunction("LoadAssetBundle", LoadAssetBundle);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("manifest", get_manifest, set_manifest);
		L.RegVar("ManifestUri", get_ManifestUri, set_ManifestUri);
		L.RegVar("assetBundleRootUri", get_assetBundleRootUri, set_assetBundleRootUri);
		L.RegVar("ins", get_ins, set_ins);
		L.RegVar("isInit", get_isInit, set_isInit);
		L.RegVar("Ins", get_Ins, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AssetBundleManager obj = (AssetBundleManager)ToLua.CheckObject<AssetBundleManager>(L, 1);
			System.Action<bool> arg0 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 2);
			obj.Init(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadLuaFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			AssetBundleManager obj = (AssetBundleManager)ToLua.CheckObject<AssetBundleManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action<UnityEngine.AssetBundle> arg1 = (System.Action<UnityEngine.AssetBundle>)ToLua.CheckDelegate<System.Action<UnityEngine.AssetBundle>>(L, 3);
			obj.LoadLuaFile(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			AssetBundleManager obj = (AssetBundleManager)ToLua.CheckObject<AssetBundleManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			System.Action<AssetBundleItem> arg1 = (System.Action<AssetBundleItem>)ToLua.CheckDelegate<System.Action<AssetBundleItem>>(L, 3);
			obj.LoadAssetBundle(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_manifest(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			UnityEngine.AssetBundleManifest ret = obj.manifest;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index manifest on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ManifestUri(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			string ret = obj.ManifestUri;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ManifestUri on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetBundleRootUri(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			string ret = obj.assetBundleRootUri;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleRootUri on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ins(IntPtr L)
	{
		try
		{
			ToLua.Push(L, AssetBundleManager.ins);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			bool ret = obj.isInit;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isInit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Ins(IntPtr L)
	{
		try
		{
			ToLua.Push(L, AssetBundleManager.Ins);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_manifest(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			UnityEngine.AssetBundleManifest arg0 = (UnityEngine.AssetBundleManifest)ToLua.CheckObject(L, 2, typeof(UnityEngine.AssetBundleManifest));
			obj.manifest = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index manifest on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ManifestUri(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ManifestUri = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ManifestUri on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetBundleRootUri(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.assetBundleRootUri = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleRootUri on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ins(IntPtr L)
	{
		try
		{
			AssetBundleManager arg0 = (AssetBundleManager)ToLua.CheckObject<AssetBundleManager>(L, 2);
			AssetBundleManager.ins = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssetBundleManager obj = (AssetBundleManager)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isInit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isInit on a nil value");
		}
	}
}

